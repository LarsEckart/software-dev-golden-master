plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    def junitVersion = '5.6.0'
    def assertjVersion = '3.15.0'
    def approvalVersion = '4.0.2'

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("com.approvaltests:approvaltests:${approvalVersion}")
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all"
}

sourceCompatibility = '11'
targetCompatibility = '11'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}